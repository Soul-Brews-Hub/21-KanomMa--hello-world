:root {
  /* Architectural Color Palette - Inspired by TDP Architecture */
  --primary-color: #ff432a;
  --primary-dark: #e03822;
  --secondary-color: #343a40;
  --accent-color: #ff432a;

  /* Neutral Grayscale Palette */
  --text-primary: #212529;
  --text-secondary: #495057;
  --bg-primary: #f8f9fa;
  --bg-secondary: #e9ecef;
  --bg-tertiary: #dee2e6;
  --bg-overlay: rgba(255, 255, 255, 0.95);
  --border-light: #ced4da;

  /* Glass morphism for counter card */
  --card-background: rgba(248, 249, 250, 0.85);
  --card-border: rgba(255, 255, 255, 0.2);
  --shadow-color: rgba(0, 0, 0, 0.1);
  --shadow-dark: rgba(0, 0, 0, 0.15);

  /* Design System */
  --border-radius: 8px;
  --transition-speed: 0.25s;
  --transition-smooth: cubic-bezier(0.4, 0.0, 0.2, 1);

  /* Parallax Animation Variables */
  --parallax-speed-multiplier: 0.5;
  --parallax-intensity: 1;
  --scroll-y: 0px;

  /* Architectural Pattern Variables */
  --grid-size: 40px;
  --grid-opacity: 0.03;
  --line-thickness: 1px;

  /* Parallax Layer Speeds */
  --layer-1-speed: 0.1;
  --layer-2-speed: 0.2;
  --layer-3-speed: 0.3;
  --layer-4-speed: 0.4;

  /* Performance Settings */
  --gpu-acceleration: translate3d(0, 0, 0);
  --animation-timing-function: ease-in-out;

  /* Geometric Animation Durations */
  --pattern-float-duration: 20s;
  --grid-anim-duration: 25s;
  --overlay-fade-duration: 8s;

  /* Emoji Animation Settings */
  --emoji-float-duration: 8s;
  --emoji-bounce-duration: 3s;
  --emoji-rotate-duration: 12s;
  --emoji-pulse-duration: 4s;
  --emoji-spiral-duration: 15s;
  --emoji-max-count: 25;
  --emoji-size-base: 2rem;
  --emoji-opacity-base: 0.7;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Lato', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background-color: var(--bg-primary);
  background-image:
    linear-gradient(45deg, var(--bg-secondary) 25%, transparent 25%),
    linear-gradient(-45deg, var(--bg-secondary) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--bg-secondary) 75%),
    linear-gradient(-45deg, transparent 75%, var(--bg-secondary) 75%);
  background-size: var(--grid-size) var(--grid-size);
  background-position: 0 0, 0 calc(var(--grid-size) / 2), calc(var(--grid-size) / 2) calc(-var(--grid-size) / 2), calc(-var(--grid-size) / 2) 0px;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow-x: hidden;
  position: relative;
}

/* Background Animation Container */
.background-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
}

/* Parallax Layers */
.parallax-layer-1 {
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  background: linear-gradient(135deg, transparent 0%, rgba(255, 67, 42, 0.03) 50%, transparent 100%);
  transform: translateY(calc(var(--scroll-y) * var(--layer-1-speed)));
  will-change: transform;
  opacity: 0.6;
}

.parallax-layer-2 {
  position: absolute;
  top: -10%;
  left: -10%;
  width: 120%;
  height: 120%;
  background:
    radial-gradient(circle at 20% 30%, rgba(52, 58, 64, 0.08) 0%, transparent 40%),
    radial-gradient(circle at 80% 70%, rgba(52, 58, 64, 0.05) 0%, transparent 50%);
  transform: translateY(calc(var(--scroll-y) * var(--layer-2-speed)));
  will-change: transform;
  opacity: 0.7;
}

.parallax-layer-3 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 35px,
    rgba(233, 236, 239, 0.1) 35px,
    rgba(233, 236, 239, 0.1) 70px
  );
  transform: translateY(calc(var(--scroll-y) * var(--layer-3-speed)));
  will-change: transform;
  opacity: 0.4;
}

.parallax-layer-4 {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.02) 50%, transparent 100%),
    linear-gradient(0deg, transparent 0%, rgba(255, 255, 255, 0.02) 50%, transparent 100%);
  transform: translateY(calc(var(--scroll-y) * var(--layer-4-speed)));
  will-change: transform;
  opacity: 0.8;
}

/* Geometric Float Animations */
@keyframes geometricFloat1 {
  0%, 100% {
    transform: translate3d(0, 0, 0) rotate(0deg);
    opacity: 0.03;
  }
  25% {
    transform: translate3d(20px, -30px, 0) rotate(90deg);
    opacity: 0.06;
  }
  50% {
    transform: translate3d(-15px, 10px, 0) rotate(180deg);
    opacity: 0.04;
  }
  75% {
    transform: translate3d(10px, 20px, 0) rotate(270deg);
    opacity: 0.05;
  }
}

@keyframes geometricFloat2 {
  0%, 100% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: 0.02;
  }
  50% {
    transform: translate3d(-30px, -20px, 0) scale(1.2);
    opacity: 0.04;
  }
}

/* Geometric Pattern Elements */
.geometric-pattern {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  opacity: 0.15;
}

.geometric-shape {
  position: absolute;
  opacity: 0.8;
  will-change: transform;
  transform: var(--gpu-acceleration);
}

.geometric-shape-1 {
  width: 120px;
  height: 120px;
  background: linear-gradient(135deg, rgba(255, 67, 42, 0.02), transparent);
  border-radius: 40% 60% 60% 40% / 40% 40% 60% 60%;
  top: 15%;
  left: 10%;
  animation: geometricFloat1 calc(var(--pattern-float-duration) * 1.5) var(--transition-smooth) infinite;
}

.geometric-shape-2 {
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, rgba(52, 58, 64, 0.03), transparent);
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  top: 25%;
  right: 12%;
  animation: geometricFloat2 calc(var(--pattern-float-duration) * 1.2) var(--transition-smooth) infinite;
}

.geometric-shape-3 {
  width: 200px;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(255, 67, 42, 0.04), transparent);
  top: 40%;
  left: 5%;
  animation: geometricFloat1 calc(var(--pattern-float-duration) * 0.8) var(--transition-smooth) infinite;
}

.geometric-shape-4 {
  width: 150px;
  height: 150px;
  border: 1px solid rgba(52, 58, 64, 0.02);
  border-radius: 50%;
  top: 60%;
  right: 8%;
  animation: geometricFloat2 calc(var(--pattern-float-duration) * 1.8) var(--transition-smooth) infinite;
}

/* Architectural Pattern Overlay */
.architectural-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    repeating-linear-gradient(
      0deg,
      rgba(52, 58, 64, 0.02) 0px,
      rgba(52, 58, 64, 0.02) 1px,
      transparent 1px,
      transparent 40px
    ),
    repeating-linear-gradient(
      90deg,
      rgba(52, 58, 64, 0.02) 0px,
      rgba(52, 58, 64, 0.02) 1px,
      transparent 1px,
      transparent 40px
    );
  animation: architecturalGrid var(--grid-anim-duration) linear infinite;
  pointer-events: none;
  will-change: transform;
}

@keyframes architecturalGrid {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(40px, 40px, 0);
  }
}

/* Particle Field for Interactive Effects */
.particle-field {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    radial-gradient(circle at 50% 50%, transparent 0%, rgba(255, 255, 255, 0.03) 40%, transparent 70%),
    radial-gradient(circle at 20% 80%, transparent 0%, rgba(102, 126, 234, 0.02) 30%, transparent 60%),
    radial-gradient(circle at 80% 20%, transparent 0%, rgba(118, 75, 162, 0.02) 35%, transparent 65%);
  opacity: 0;
  will-change: opacity;
  transform: var(--gpu-acceleration);
}

/* Performance Optimizations */
@media (prefers-reduced-motion: reduce) {
  .gradient-flow {
    animation: none !important;
    opacity: 0.3;
  }

  .shape {
    animation: none !important;
    opacity: 0.2 !important;
  }

  .particle-field {
    animation: none !important;
  }

  .counter-value {
    animation: none !important;
  }

  .emoji {
    animation: none !important;
    opacity: 0.3 !important;
  }
}

/* Device-based Performance Scaling */
@media (max-width: 768px) {
  :root {
    --shape-float-duration: 20s;
    --gradient-animation-duration: 12s;
    --emoji-max-count: 15;
    --emoji-size-base: 1.5rem;
  }

  .shape-3, .shape-5, .shape-6 {
    display: none;
  }
}

@media (max-width: 480px) {
  :root {
    --shape-float-duration: 25s;
    --gradient-animation-duration: 15s;
    --emoji-max-count: 8;
    --emoji-size-base: 1.2rem;
  }

  .shape-2, .shape-4 {
    display: none;
  }

  .shape-1 {
    opacity: 0.5;
  }
}

/* Battery Saving Mode */
@media (prefers-reduced-data: reduce) {
  .background-animation {
    display: none;
  }
}

/* Print Styles */
@media print {
  .background-animation {
    display: none !important;
  }

  body {
    background: white !important;
  }

  .counter-container {
    border: 2px solid #333 !important;
    box-shadow: none !important;
  }
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  :root {
    --shape-color-1: rgba(255, 255, 255, 0.3);
    --shape-color-2: rgba(255, 255, 255, 0.2);
    --shape-color-3: rgba(255, 255, 255, 0.25);
  }
}

.particle-field.pulse {
  animation: particlePulse 0.6s ease-out;
}

@keyframes particlePulse {
  0% {
    opacity: 0;
    transform: translate3d(0, 0, 0) scale(1);
  }
  50% {
    opacity: 1;
    transform: translate3d(0, 0, 0) scale(1.05);
  }
  100% {
    opacity: 0;
    transform: translate3d(0, 0, 0) scale(1.1);
  }
}

/* Emoji Background System */
.emoji-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.emoji-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.emoji {
  position: absolute;
  font-size: var(--emoji-size-base);
  opacity: var(--emoji-opacity-base);
  will-change: transform, opacity;
  pointer-events: none;
  user-select: none;
  transform: var(--gpu-acceleration);
}

/* Emoji Animation Types */
.emoji-float {
  animation: emojiFloat var(--emoji-float-duration) linear infinite;
}

.emoji-bounce {
  animation: emojiBounce var(--emoji-bounce-duration) ease-in-out infinite;
}

.emoji-rotate {
  animation: emojiRotate var(--emoji-rotate-duration) linear infinite;
}

.emoji-pulse {
  animation: emojiPulse var(--emoji-pulse-duration) ease-in-out infinite;
}

.emoji-spiral {
  animation: emojiSpiral var(--emoji-spiral-duration) linear infinite;
}

/* Emoji Animation Keyframes */
@keyframes emojiFloat {
  0% {
    transform: translate3d(0, 100vh, 0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: var(--emoji-opacity-base);
  }
  90% {
    opacity: var(--emoji-opacity-base);
  }
  100% {
    transform: translate3d(0, -10vh, 0) rotate(360deg);
    opacity: 0;
  }
}

@keyframes emojiBounce {
  0%, 100% {
    transform: translate3d(0, 0, 0) scale(1);
  }
  25% {
    transform: translate3d(10px, -20px, 0) scale(1.1);
  }
  50% {
    transform: translate3d(-5px, -35px, 0) scale(0.95);
  }
  75% {
    transform: translate3d(8px, -15px, 0) scale(1.05);
  }
}

@keyframes emojiRotate {
  0% {
    transform: translate3d(0, 0, 0) rotate(0deg) scale(1);
  }
  25% {
    transform: translate3d(15px, -10px, 0) rotate(90deg) scale(1.1);
  }
  50% {
    transform: translate3d(0, -20px, 0) rotate(180deg) scale(1);
  }
  75% {
    transform: translate3d(-15px, -10px, 0) rotate(270deg) scale(1.1);
  }
  100% {
    transform: translate3d(0, 0, 0) rotate(360deg) scale(1);
  }
}

@keyframes emojiPulse {
  0%, 100% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: var(--emoji-opacity-base);
  }
  50% {
    transform: translate3d(0, -5px, 0) scale(1.3);
    opacity: var(--emoji-opacity-base) * 1.2;
  }
}

@keyframes emojiSpiral {
  0% {
    transform: translate3d(0, 0, 0) rotate(0deg) scale(1);
  }
  25% {
    transform: translate3d(30px, -30px, 0) rotate(90deg) scale(1.1);
  }
  50% {
    transform: translate3d(0, -60px, 0) rotate(180deg) scale(1);
  }
  75% {
    transform: translate3d(-30px, -30px, 0) rotate(270deg) scale(1.1);
  }
  100% {
    transform: translate3d(0, 0, 0) rotate(360deg) scale(1);
  }
}

.app {
  width: 100%;
  max-width: 500px;
  padding: 20px;
}

.counter-container {
  background: var(--card-background);
  backdrop-filter: blur(10px);
  border-radius: var(--border-radius);
  padding: 40px;
  text-align: center;
  box-shadow: 0 20px 40px var(--shadow-color);
  border: 1px solid rgba(255, 255, 255, 0.2);
  animation: slideUp 0.6s ease-out;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.title {
  font-family: 'Cormorant Garamond', serif;
  font-size: 3rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 30px;
  letter-spacing: -0.02em;
  position: relative;
}

.title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 2px;
  background-color: var(--primary-color);
}

.counter-display {
  margin: 30px 0;
  position: relative;
}

.counter-value {
  font-family: 'Cormorant Garamond', serif;
  font-size: 5.5rem;
  font-weight: 700;
  color: var(--text-primary);
  display: inline-block;
  min-width: 200px;
  letter-spacing: -0.03em;
  transition: transform var(--transition-speed) var(--transition-smooth);
  position: relative;
}

.counter-value:active {
  transform: scale(0.95);
}

.button-group {
  display: flex;
  gap: 15px;
  justify-content: center;
  margin: 30px 0;
  flex-wrap: wrap;
}

.counter-button {
  padding: 15px 25px;
  border: 1px solid var(--border-light);
  border-radius: var(--border-radius);
  font-size: 1.5rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-speed) var(--transition-smooth);
  position: relative;
  overflow: hidden;
  min-width: 80px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  color: var(--text-primary);
  backdrop-filter: blur(10px);
}

.counter-button:before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 67, 42, 0.1), transparent);
  transition: left 0.5s var(--transition-smooth);
}

.counter-button:hover:before {
  left: 100%;
}

.counter-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px var(--shadow-color);
  border-color: var(--primary-color);
  background: rgba(255, 67, 42, 0.02);
}

.counter-button:active {
  transform: translateY(0);
  box-shadow: 0 4px 15px var(--shadow-color);
}

/* Button states are now handled by base .counter-button class */

.instructions {
  margin-top: 30px;
  color: var(--text-secondary);
  font-size: 0.9rem;
  line-height: 1.6;
}

.instructions p {
  margin: 8px 0;
}

kbd {
  background: rgba(0, 0, 0, 0.1);
  padding: 2px 6px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 0.8em;
  border: 1px solid rgba(0, 0, 0, 0.2);
}

/* Responsive Design */
@media (max-width: 600px) {
  .app {
    padding: 15px;
  }

  .counter-container {
    padding: 30px 20px;
  }

  .title {
    font-size: 2rem;
  }

  .counter-value {
    font-size: 4rem;
    min-width: 150px;
  }

  .button-group {
    gap: 10px;
  }

  .counter-button {
    padding: 12px 20px;
    font-size: 1.2rem;
    min-width: 70px;
    height: 50px;
  }

  .instructions {
    font-size: 0.8rem;
  }
}

@media (max-width: 400px) {
  .title {
    font-size: 1.8rem;
  }

  .counter-value {
    font-size: 3.5rem;
    min-width: 120px;
  }

  .counter-button {
    padding: 10px 15px;
    font-size: 1rem;
    min-width: 60px;
    height: 45px;
  }
}

/* Focus styles for accessibility */
.counter-button:focus-visible {
  outline: 3px solid var(--primary-color);
  outline-offset: 2px;
}

/* Animation for counter changes */
@keyframes countChange {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.counter-value.animate {
  animation: countChange 0.2s ease-in-out;
}